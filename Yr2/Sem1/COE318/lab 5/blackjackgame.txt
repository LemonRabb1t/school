package coe318.lab5;

/**
 *
 * @author N
 */
public class BlackjackGame {

    private CardPile deck;
    CardPile houseCards;
    CardPile playerCards;
    private boolean houseDone;
    private boolean playerDone;
    private UserInterface ui;

    public BlackjackGame(UserInterface ui) {
        this.ui = ui;
        ui.setGame(this);
        deck = new CardPile();
        for (int i = 2; i < 15; i++) {
            for (int j = 0; j < 4; j++) {
                deck.add(new Card(i, j, true));
            }
        }
        houseCards = new CardPile();
        playerCards = new CardPile();
        houseDone = false;
        playerDone = false;
    }

    public void start() {
        // give random card, remove from deck
        Card c;
        c = deck.removeRandom();
        c.setFaceUp(false);
        getHouseCards().add(c);
        getHouseCards().add(deck.removeRandom());
        getPlayerCards().add(deck.removeRandom());
        getPlayerCards().add(deck.removeRandom());
        // display on the ui
        ui.display();
    }

    public void play() {
        while (!houseDone || !playerDone) {
            if (!houseDone) {
                if (score(getHouseCards()) <= 17) {
                    getHouseCards().add(deck.removeRandom());
                    ui.display();
                } else {
                    houseDone = true;
                }
            }
            if (!playerDone) {
                if (ui.hitMe()) {
                    getPlayerCards().add(deck.removeRandom());
                    ui.display();
                } else {
                    playerDone = true;
                }
            }
            if (score(getPlayerCards()) >= 21) {
                playerDone = true;
            }
        }
    }

    public void end() {
        getHouseCards().getCards().get(0).setFaceUp(true);
        ui.gameOver();
    }

    /**
     * Determine the score of a pile of cards.
     *
     * @param p
     * @return the score
     */
    public int score(CardPile p) {
        int scoreTotal = 0;
        int cardsScore;
        for (Card card : p.getCards()) {
            if (card.getRank() == 14) { // ace = 1
                cardsScore = 1;
            } else if (10 < card.getRank() && card.getRank() < 14) { // jack, queen, king = 10
                cardsScore = 10;
            } else {
                cardsScore = card.getRank(); // 1-10 rank = value
            }
            scoreTotal += cardsScore; // add scores
        }
        return scoreTotal;
    }

    /**
     * @return the houseCards
     */
    public CardPile getHouseCards() {
        return houseCards;
    }

    /**
     * @return the playerCards
     */
    public CardPile getPlayerCards() {
        return playerCards;
    }

    public static void main(String[] args) {
        BlackjackGame game = new BlackjackGame(new SimpleUI());
        game.start();
        game.play();
        game.end();
    }
}
